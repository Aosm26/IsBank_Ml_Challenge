# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ek8VGDutl6lPWSNyFH7b6dwStkGXn2Cs
"""

import pandas as pd
import numpy as np
import math
from sklearn.impute import SimpleImputer

data=pd.read_csv('men9.csv')
data.head()
xdata = data.drop(columns=['menus','id','month','carrier','devicebrand','n_seconds_1','n_seconds_2','n_seconds_3','menus_1','menus_2','menus_3','menus_4','menus_5','menus_6','menus_7','menus_8','menus_9'])
ydata = data.menus_9.values
sutunlar=['menus_9']
ydata = data[sutunlar].values


x=(xdata-np.min(xdata))/(np.max(xdata)-np.min(xdata))
y=(ydata-np.min(ydata))/(np.max(ydata)-np.min(ydata))
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2,random_state=1)

import tensorflow as tf
model = tf.keras.models.Sequential()
print(x_train.shape)
print(y_train.shape)
model.add(tf.keras.layers.Dense(256, input_shape=(50,), activation=None))
model.add(tf.keras.layers.Dense(1, activation='sigmoid'))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

print(y_train.shape)
print(x_train.shape)
model.fit(x_train, y_train, epochs=1000)



model.evaluate(x_test, y_test)